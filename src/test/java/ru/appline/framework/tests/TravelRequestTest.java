package ru.appline.framework.tests;

import io.qameta.allure.Description;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import ru.appline.framework.basetestsclass.BaseTests;
import ru.appline.framework.utils.MyAllureListener;

/**
 * Задание №1.
 * Написать автотест по заданному сценарию
 * Сценарий "Оформление заявки на командировку"
 * Перейти на страницу <a href="http://training.appline.ru/user/login">...</a>
 * Пройти авторизацию (варианты имен пользователей даны после сценария)
 * Проверить наличие на странице заголовка Панель быстрого запуска
 * В выплывающем окне раздела "Расходы" нажать на "Командировки".
 * Нажать на "Создать командировку"
 * Проверить наличие на странице заголовка "Создать командировку"
 * На странице создания командировки заполнить или выбрать поля:
 * — Подразделение - выбрать Отдел внутренней разработки
 * — Принимающая организация - нажать "Открыть список" и в поле "Укажите организацию" выбрать любое значение
 * — В задачах поставить чекбокс на "Заказ билетов"
 * — Указать города выбытия и прибытия
 * — Указать даты выезда и возвращения
 * —!! Раздел Командированные сотрудники не заполнять
 * Проверить, что все поля заполнены правильно
 * Нажать "Сохранить и закрыть"
 * Проверить, что на странице появилось сообщение: "Список командируемых сотрудников не может быть пустым"
 */

@ExtendWith(MyAllureListener.class)
@DisplayName("Оформление заявки на командировку")
public class TravelRequestTest extends BaseTests {
    @Test
    @DisplayName("Проверка отображения сообщения - Список командируемых сотрудников не может быть пустым")
    public void failMessageTest() {
        app.getLoginPage()
                // 2. Пройти авторизацию
                .waitingLoginForm()
                .enterLoginAndPassword("Taraskina Valeriya", "testing")
                .clickBtnLogin()
                // 3. Проверить наличие на странице заголовка "Панель быстрого запуска"
                .checkMainPageTitle()
                // 4. В выплывающем окне раздела "Расходы" нажать на "Командировки"
                .selectBaseMenu("Расходы")
                .selectSubMenu("Командировки")
                .checkBusinessTripPageTitle()
                // 5. Нажать на "Создать командировку"
                .createBusinessTrip()
                // 6. Проверить наличие на странице заголовка "Создать командировку"
                .checkCreateBusinessTripPageTitle()
                // 7. На странице создания командировки заполнить или выбрать поля
                // - Подразделение
                .clickSubdivisionBtn()
                .selectSubdivision("Отдел внутренней разработки")
                // - Принимающая организация
                .clickOpenListBtn()
                .clickSelectOrganizationBtn()
                .fillField("Организация", "IBS")
                .selectOrganization("IBS")
                // - В задачах поставить чекбокс на "Заказ билетов"
                .selectTask("Заказ билетов")
                // - Указать города выбытия и прибытия
                .fillField("Город выбытия", "Москва")
                .fillField("Город прибытия", "Нижний-Новгород")
                // - Указать даты выезда и возвращения
                .fillField("Планируемая дата выезда", "12.04.2023")
                .fillField("Планируемая дата возвращения", "28.04.2023")
                // - Нажать "Сохранить и закрыть"
                .clickSaveAndClose()
                // - Проверить, что на странице появилось сообщение: "Список командируемых сотрудников не может быть пустым"
                .checkValidationFailedMessage("Список командируемых сотрудников не может быть пустым");
    }
}
